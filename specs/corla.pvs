%%% model of the Colorado Risk Limiting Audit (CORLA) tool.
%%% Joe Kiniry
%%% 11-13 July 2017

%%% This document contains a formal specification of the ColoradoRLA
%%% system/tool. It is written in a literate style using the PVS
%%% theorem prover. Writing system specifications in this fashion is
%%% called (formal) domain engineering. Our formal domain model is
%%% written in PVS's higher-order logic (HOL). Our informal domain
%%% model is written in the Free & Fair System Specification Language,
%%% or FAFESSL for short. FAFESSL is a daughter of Extended BON which
%%% was, in turn, a daughter of BON, the Business Object Notation.

%%% See our Bibliography project for more information.
%%% https://github.com/FreeAndFair/Bibliography

%%% In order to relate PVS to FAFESSL, we must define a refinement
%%% relationship between their two type systems. Informally, that
%%% mapping is described in the following paragraph.

%%% We map PVS public theories and their contents to FAFESSL constructs.
%%% The top-level corla theory maps to the FAFESSL system specification,
%%% theories map to clusters, (PVS) types map to (FAFESSL) types, and
%%% functions map to features.  We use special comments to denote
%%% informal specifications which will be extracted using a shell script
%%% into a well-typed FAFESSL informal domain model specification. 

%%% As mentioned above, we write formal specifications using a
%%% literate style, a la Knuth. Doing so permits us to document our
%%% thinking and the system design, from domain modeling and
%%% engineering all of the way to formal specification and
%%% verification, in a fashion that produces beautifully printed
%%% books and interactive hypertext.

%%% In order to write literate PVS we use our old friend Adriaan de
%%% Groot's scripts available via
%%% http://www.cs.kun.nl/~adridg/research/PVS-literate.html

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%% Here is a cheat sheet for literate PVS.

%%%%%% Six percent signs (yes, %%%%%%) are meta-comments and are
%%%%%% deleted from the output in all processing modes. I Typically
%%%%%% use these comments for the copyright header at the top of the
%%%%%% file and to set off blocks of PVS code from each other.

%%%%%% Three percent signs (%%%) are output as regular text in the
%%%%%% file mode. The text after the percent signs can contain
%%%%%% whatever LaTeX commands you like -- it's output as-is. In block
%%%%%% mode, three percent sign comments are deleted from the output.

%%%%%% One percent sign (%) is output as regular text in block mode
%%%%%% and deleted in file mode.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% Our formal domain model is also annotated with structured comments
%%% in precise natural language using a standard set of annotation.  A
%%% shell script processes these annotations and generates a
%%% well-typed informal FAFESSL specification.

%%% The FAFESSL annotations we use are as follows:
%%% \begin{description}
%%% \item[@fafessl-system] the FAFESSL name of the system
%%% \item[@fafessl-cluster] the FAFESSL name of a cluster
%%% \item[@fafessl-explanation] the explanation for a module
%%% \item[%fafessl-description] a short description of a module
%%% \item[@fafessl-indexing-<CLAUSE>] a prefix for any indexing <CLAUSE>
%%% \end{description}

%%% These suffixes are commonly used:
%%% \begin{description}
%%% \item[author] an author of an artifact
%%% \item[organization] an organization responsible for an artifact
%%% \item[keywords] a comma-separated list of keywords
%%% \item[created] the creation date for an artifact
%%% \item[github] the URL for the GitHub project containing an artifact
%%% \end{description}

%%% \section{System Overview}

%%% The RLA Tool is being developed by Free & Fair for the Colorado
%%% Department of State (CDOS henceforth). The RLA Tool facilitates
%%% running a risk limiting audit across several jurisdictions. In the
%%% case of Colorado, it facilitates running risk limiting audits
%%% across all counties in the state simultaneously.

%%% The Colorado election law pertaining to election audits is "TBD",
%%% and the rule pertaining such are found in the "Revised Draft of
%%% Proposed Rules" whose latest version is labeled CCR 1505-1 and
%%% dated July 6, 2017. Section 25, Post-Election Audit, of that
%%% document is the salient portion of that document.

%%% This domain model is based upon that law, its rules, our contract,
%%% our bibliography of publications about risk-limiting audits, etc.

%%%%%% Literate PVS comments +BEGIN and +END denote blocks. A block
%%%%%% named "foo" is written to a LaTeX file "foo.tex".

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%+BEGIN background

%%% \section{Background Model Elements}

%%% There are a number of background concepts from computer science
%%% that are necessary to summarize in order to formalize the RLA
%%% Tool.

%%% The RLA Tool is a client-server system. The server is implemented
%%% in Java and runs on servers hosted by CDOS. The client is
%%% implemented in TypeScript and Javascript and runs in modern web
%%% browsers.

%%% As we are hosting the RLA Tool in CDOS's system, they are
%%% providing the hosting servers, network, and a number of services
%%% in support of the tools deployment and management.

%%% A database is used in order to store all of the data relevant to
%%% audits. Databases contain tables which describe the information
%%% that they contain. We need not formalize database elements in any
%%% more detail than what follows.

database: THEORY
BEGIN
  database_table: TYPE
  database: TYPE = setof[database_table]
END database

%%% We also need to be able to talk about some pretty simple ideas
%%% from information systems.  For example, many files in election
%%% systems are syntactically just lists of comma-separate
%%% values. Email is used to for communication between officials and
%%% with the public. Files are used to store information in a
%%% persistent fashion. Consequently, we introduce a few types for
%%% these ideas.

information_systems: THEORY
BEGIN
  comma_separated_value: TYPE
  % The csv type is an example of how how to introduce a type synonym
  % in PVS.
  csv: TYPE = comma_separated_value
  email: TYPE
  email_address: TYPE
  file: TYPE
END information_systems

%%% Over time, as we need to introduce more background concepts, we
%%% will add them to this theory.

%+END background

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%+BEGIN ballots

%%% \section{Ballots}

%%% The first basic concept of elections that we need to specify is
%%% ballots.

ballots: THEORY
BEGIN

%%% Several of our concepts are simply numbers. For example, ballot
%%% identifiers (ids), batch numbers, and batch sizes are all just
%%% natural numbers (integers starting from zero).

  ballot_id: TYPE = nat
  batch_number: TYPE = nat
  batch_size: TYPE = nat

%%% Ballots are marked by voters or ballot marking devices.  A ballot
%%% mark is any kind of mark made on a ballot that is not found on a
%%% blank ballot. A voter_marking is any mark made by a voter. An
%%% ambiguous mark is a mark for which there is ambiguity in its
%%% interpretation (voter or machine). A stray mark is a mark that is
%%% outside of the legitimate regions of a ballot, such as hesitation
%%% marks outside of the mark regions for a contest or marks made by
%%% coffee spilled on a paper ballot.

  ballot_mark: TYPE
  voter_marking: TYPE = pred[ballot_mark]
  ambiguous_mark: TYPE = pred[ballot_mark]
  stray_mark: TYPE = pred[ballot_mark]

%%% Ballots come in several varieties.  All ballots are either
%%% represented in a digital fashion (a scan, PDF, etc.) or are paper
%%% ballots, or both. Ballots are also classifed based upon where they
%%% originate, such as ballots delivered via mail, UOCAVA ballots,
%%% early ballots, etc. Ballots are also either tabulated or not.

  ballot: TYPE
  digital_ballot: TYPE = pred[ballot]
  paper_ballot: TYPE = pred[ballot]
  mail_ballot: TYPE = pred[ballot]
  uocava_ballot: TYPE = pred[ballot]
  early_ballot: TYPE = pred[ballot]
  tabulated_ballot: TYPE = pred[ballot]

%%% Each ballot has a ballot style.

  ballot_style: TYPE

  ballot_contest: TYPE
  ballot_manifest: TYPE

  ballot_order: TYPE
  ballot_storage: TYPE
  batch: TYPE

  cast_vote_record: TYPE
  overvote: TYPE
  undervote: TYPE

%%% Several terms are underspecified at this time. They are as
%%% follows.

  imprinted_ballot: TYPE
  ballot_certification: TYPE

END ballots

%+END ballots

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%+BEGIN elections

%%% \section{Elections}

%%% Elections have a number of general concepts necessary to specify
%%% the RLA Tool.

elections: THEORY
BEGIN
  audit_center: TYPE
  candidate: TYPE
  contest: TYPE
  contest_name: TYPE = string
  county: TYPE
  county_number: TYPE = nat
  election: TYPE
  election_canvass: TYPE
  political_party: TYPE

%%% Some voters are UOCAVA voters. What follows is one way to
%%% formalize such, simply stating that the type uocava_voter is a
%%% predicate on the type voter. Consequently, all voters are UOCAVA
%%% or not.

  voter: TYPE
  uocava_voter: TYPE = pred[voter]
END elections

%+END elections

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

audits: THEORY
BEGIN
  audit: TYPE
  audit_board: TYPE
  audit_mistake: TYPE
  audit_progress: TYPE
  ballot_polling_audit: TYPE
  ballots_to_audit: TYPE
  contest_margin: TYPE
  digital_ballot_adjudication: TYPE
  manual_ballot_adjudication: TYPE
  margin: TYPE
  random_audit: TYPE
END audits

instructions_forms_reports: THEORY
BEGIN
  audit_report: TYPE
  ballot_instructions: TYPE
  sos_audit_form: TYPE
  sos_voter_intent_guide: TYPE
END instructions_forms_reports

roles: THEORY
BEGIN
  administrator: TYPE
  audit_board_member: TYPE
  audit_supervisor: TYPE
  canvas_board: TYPE
  cdos: TYPE
  county_administrator: TYPE
  county_clerk: TYPE
  role: TYPE
  sos: TYPE
  state_administrator: TYPE
END roles

randomness: THEORY
BEGIN
  prng: TYPE
  seed: TYPE
END randomness

cryptography: THEORY
BEGIN
  hash: TYPE
END cryptography

rlas: THEORY
BEGIN
  RLA: TYPE
  discrepency: TYPE
  random: TYPE
  risk_limit: TYPE
  sample_size: TYPE
  wrong_outcome: TYPE
END rlas

elections_equipment: THEORY
BEGIN
  dominion_voting_system: TYPE
  scanner: TYPE
  scanner_id_number: TYPE
  voting_system: TYPE
  vvpat: TYPE
END elections_equipment

authentication: THEORY
BEGIN
  authenticate: TYPE
  authentication: TYPE
  two_factor_authentication: TYPE
  username: TYPE
  password: TYPE
  credential: TYPE
END authentication

cast_vote_records: THEORY
BEGIN
  cvr: TYPE
  cvr_file: TYPE
  cvr_number: TYPE
END cast_vote_records

user_interfaces: THEORY
BEGIN
  ui: TYPE
  uploading_interface: TYPE
  cvr_uploading_interface: TYPE
  county_auditing_interface: TYPE
  audit_adjudication_interface: TYPE
END user_interfaces

dashboards: THEORY
BEGIN
  dashboard: TYPE
  developer_dashboard: TYPE
  state_wide_dashboard: TYPE
  county_dashboard: TYPE
END dashboards

system_architecture: THEORY
BEGIN
  IMPORTING database

  back_end: TYPE
  front_end: TYPE
END system_architecture

terminology: THEORY
BEGIN
  IMPORTING
    %fafessl-description "TBD"
    ballots,
    %fafessl-description "TBD"
    elections,
    %fafessl-description "TBD"
    audits,
    %fafessl-description "TBD"
    instructions_forms_reports,
    %fafessl-description "TBD"
    roles,
    %fafessl-description "TBD"
    randomness,
    %fafessl-description "TBD"
    cryptography,
    %fafessl-description "TBD"
    rlas,
    %fafessl-description "TBD"
    elections_equipment,
    %fafessl-description "TBD"
    authentication,
    %fafessl-description "TBD"
    cast_vote_records,
    %fafessl-description "TBD"
    user_interfaces,
    %fafessl-description "TBD"
    dashboards,
    %fafessl-description "TBD"
    database,
    %fafessl-description "TBD"
    information_systems,
    %fafessl-description "TBD"
    system_architecture
END terminology

% @fafessl-system CORLA_SYSTEM
% @fafessl-indexing-author Joseph Kiniry <kiniry@freeandfair.us>
% @fafessl-indexing-organization Free & Fair
% @fafessl-indexing-keywords Free & Fair
% @fafessl-indexing-created Free & Fair
% @fafessl-indexing-github Free & Fair
% @fafessl-explanation "TBD"
corla: THEORY
BEGIN
  IMPORTING
    %fafessl-description "TBD"
    terminology
END corla
